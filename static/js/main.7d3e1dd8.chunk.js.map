{"version":3,"sources":["styles/GlobalStyle.js","styles/Common.js","components/Movie.js","components/MovieList.js","services/movies.js","components/PageNav.js","components/SearchResults.js","utils/constants.js","assets/magnifying-glass.svg","components/SearchBar.js","components/Nominations.js","components/Banner.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Card","styled","div","ListItemButton","button","MovieContainer","Movie","movie","Title","Year","List","ul","ListItem","li","ListItemContainer","MovieList","movies","MovieButton","map","m","imdbID","baseUrl","search","searchText","a","page","fetch","response","json","data","requestSuccessful","filterOutDuplicateMovies","Search","total","totalResults","error","Error","omdbData","Response","toLowerCase","Object","values","reduce","acc","curr","PageNavContainer","PageNavButton","PageIndexButton","p","selected","PageRange","pageNum","pageLength","lowerBound","upperBound","PageSelection","selectPage","lastPageNum","Math","ceil","prevDisabled","nextDisabled","onClick","disabled","IndexButtonGroup","buttonsLength","indexList","Array","keys","n","buttonNum","PageNav","SearchResultsCard","StyledH3","h3","SearchResults","debouncedSearchText","nominations","setNominations","useState","setPageNum","searchData","setSearchData","searchMovies","useCallback","movieService","then","newSearchData","catch","message","useEffect","isNominatingDisabled","movieID","isMovieNominated","maxMoviesNominated","length","newNomination","newNominationIDs","addNomination","SearchCard","StyledH4","h4","SearchInputContainer","SearchImage","img","SearchInput","input","SearchBar","React","memo","setDebouncedSearchText","setSearchText","debounce","setTimeout","clearTimeout","src","MagnifyingGlassIcon","alt","type","value","onChange","e","target","displayName","NominationsCard","Nominations","nominatedMovies","nominationID","removeNominationByID","BannerContainer","BrandContainer","NotificationContainer","AuthorContainer","StyledLink","Banner","text","href","Content","Row","App","bannerText","setBannerText","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d3e1dd8.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    background-color: #eaeaea;\n    font-family: Open-Sans, Helvetica, Sans-Serif;\n  }\n`;\n\nexport default GlobalStyle;","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  padding: 1.5em;\n  background-color: white;\n  border: 1px solid #d6d6d6;\n  border-radius: 3px;\n`;\n\nexport const ListItemButton = styled.button`\n  padding: 0.4em 0.75em;\n`;","import React from 'react';\nimport styled from 'styled-components';\n\nconst MovieContainer = styled.div`\n  margin-right: 0.75em;\n`;\n\nconst Movie = ({ movie }) => {\n  return (\n    <MovieContainer>\n      {movie.Title} ({movie.Year})\n    </MovieContainer>\n  );\n};\n\nexport default Movie;","import React from 'react';\nimport styled from 'styled-components';\nimport Movie from './Movie';\n\nconst List = styled.ul`\n  padding-left: 2em;\n`;\n\nconst ListItem = styled.li`\n  margin: 0.75em;\n`;\n\nconst ListItemContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n`;\n\n// pass 'MovieButton' component prop to let movie lists use any button.\nconst MovieList = ({ movies, MovieButton }) => {\n  return (\n    <List>\n      {movies.map(m =>\n        <ListItem key={m.imdbID}>\n          <ListItemContainer>\n            <Movie movie={m} />\n            <MovieButton movie={m}/>\n          </ListItemContainer>\n        </ListItem>\n      )}\n    </List>\n  );\n};\n\nexport default MovieList;","// this module is used for communicating with omdb api\nconst baseUrl = 'https://www.omdbapi.com/?apikey=fbc21677&type=movie';\n\nconst search = async (searchText, page=1) => {\n  const response = await fetch(`${baseUrl}&s=${searchText}&page=${page}`);\n  const data = await response.json();\n\n  if (requestSuccessful(data)) {\n    // do a filter check b/c api sometimes returns duplicate ids\n    return {\n      movies: filterOutDuplicateMovies(data.Search),\n      total: data.totalResults,\n      error: null\n    };\n  } else {\n    throw new Error(data.Error);\n  }\n};\n\nconst requestSuccessful = (omdbData) => {\n  return omdbData.Response.toLowerCase() === 'true';\n};\n\nconst filterOutDuplicateMovies = (movies) => {\n  return Object.values(movies.reduce((acc, curr) => {\n    if (!acc[curr.imdbID]) {\n      acc[curr.imdbID] = curr;\n    }\n\n    return acc;\n  }, {}));\n};\n\nexport default {\n  search\n};","import React from 'react';\nimport styled from 'styled-components';\n\nconst MAX_PAGE_LENGTH = 10;\n\nconst PageNavContainer = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  margin-bottom: 1.5em;\n  & > div {\n    margin-top: 0.25em;\n  }\n`;\n\nconst PageNavButton = styled.button`\n  width: 2.5em;\n`;\n\nconst PageIndexButton = styled(PageNavButton)`\n${p =>\n    p.selected &&\n  `\n    color: white;\n    background-color: #343a40;\n  `};\n`;\n\nconst PageRange = ({ pageNum, pageLength, totalResults }) => {\n  const lowerBound = (pageNum * MAX_PAGE_LENGTH) - (MAX_PAGE_LENGTH - 1);\n  const upperBound = ((pageNum - 1) * MAX_PAGE_LENGTH) + pageLength;\n\n  return (\n    <div>\n      <span>\n        {`Showing ${lowerBound} to ${upperBound} of ${totalResults} titles`}\n      </span>\n    </div>\n  );\n};\n\nconst PageSelection = ({ pageNum, totalResults, selectPage }) => {\n  const lastPageNum = Math.ceil(totalResults / MAX_PAGE_LENGTH);\n  const prevDisabled = pageNum === 1;\n  const nextDisabled = pageNum === lastPageNum;\n\n  return (\n    <div>\n      <PageNavButton\n        onClick={() => selectPage(1)}\n        disabled={prevDisabled}\n      >\n        &lt;\n      </PageNavButton>\n      <IndexButtonGroup\n        pageNum={pageNum}\n        lastPageNum={lastPageNum}\n        selectPage={selectPage}\n      />\n      <PageNavButton\n        onClick={() => selectPage(lastPageNum)}\n        disabled={nextDisabled}\n      >\n        &gt;\n      </PageNavButton>\n    </div>\n  );\n};\n\nconst IndexButtonGroup = ({ pageNum, lastPageNum, selectPage }) => {\n  const lowerBound = pageNum > 2 ? pageNum - 2 : 1;\n  const upperBound = pageNum + 2 > lastPageNum ? lastPageNum : pageNum + 2;\n\n  const buttonsLength = upperBound - lowerBound + 1;\n\n  // array with vals 0...buttonsLength\n  const indexList = [...Array(buttonsLength).keys()];\n\n  return (\n    <>\n      {indexList.map(n => {\n        const buttonNum = n + lowerBound;\n        return (\n          <PageIndexButton\n            key={n}\n            onClick={() => selectPage(buttonNum)}\n            selected={pageNum === buttonNum}\n          >\n            {buttonNum}\n          </PageIndexButton>\n        );\n      })}\n    </>\n  );\n};\n\nconst PageNav = ({ pageNum, pageLength, totalResults, selectPage }) => {\n  return (\n    <PageNavContainer>\n      <PageRange\n        pageNum={pageNum}\n        pageLength={pageLength}\n        totalResults={totalResults}\n      />\n      <PageSelection\n        pageNum={pageNum}\n        totalResults={totalResults}\n        selectPage={selectPage}\n      />\n    </PageNavContainer>\n  );\n};\n\nexport default PageNav;","import React, { useCallback, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Card, ListItemButton } from '../styles/Common';\nimport MovieList from './MovieList';\nimport { MAX_NOMINATIONS } from '../utils/constants';\nimport movieService from '../services/movies';\nimport PageNav from './PageNav';\n\nconst SearchResultsCard = styled(Card)`\n  margin-right: 1em;\n`;\n\nconst StyledH3 = styled.h3`\n  margin: 0 0 5px 0;\n`;\n\nconst SearchResults = ({ debouncedSearchText, nominations, setNominations }) => {\n  const [pageNum, setPageNum] = useState(-1); // if page num is -1 page nav should be disabled\n  const [searchData, setSearchData] = useState({ movies: [], total: 0, error: null });\n\n  // use useCallback here so we can reuse code inside + outside useEffect safely.\n  const searchMovies = useCallback(\n    (searchText, pageNum) => {\n      movieService.search(searchText, pageNum)\n        .then(newSearchData => {\n          setPageNum(pageNum);\n          setSearchData(newSearchData);\n        })\n        .catch(error => {\n          setPageNum(-1);\n          setSearchData({ movies: [], total: 0, error: error.message });\n        });\n    }, [setPageNum, setSearchData]);\n\n  // fetch movies from api when debounced search text changes\n  useEffect(() => {\n    searchMovies(debouncedSearchText, 1);\n  }, [debouncedSearchText]);\n\n  const selectPage = (pageNum) => {\n    searchMovies(debouncedSearchText, pageNum);\n  };\n\n  const addNomination = (newNomination) => {\n    const newNominationIDs = {\n      ...nominations,\n      [newNomination.imdbID]: newNomination\n    };\n    setNominations(newNominationIDs);\n  };\n\n  const isNominatingDisabled = (movieID) => {\n    const isMovieNominated = nominations[movieID] ? true : false;\n    const maxMoviesNominated = Object.keys(nominations).length === MAX_NOMINATIONS;\n    return isMovieNominated || maxMoviesNominated;\n  };\n\n  // declare inside b/c we need closure on nomination fns\n  const NominateButton = ({ movie }) => {\n    return (\n      <ListItemButton\n        onClick={() => addNomination(movie)}\n        disabled={isNominatingDisabled(movie.imdbID)}\n      >\n        Nominate\n      </ListItemButton>\n    );\n  };\n\n  return (\n    <SearchResultsCard>\n      <StyledH3>\n        {\n          debouncedSearchText.length === 0\n            ? 'Search for a movie!'\n            : `Results for \"${debouncedSearchText}\"`\n        }\n      </StyledH3>\n      {\n        !searchData.error && pageNum !== -1\n          ? <PageNav\n            pageNum={pageNum}\n            pageLength={searchData.movies.length}\n            totalResults={searchData.total}\n            selectPage={selectPage}\n          />\n          : null\n      }\n      <MovieList\n        movies={searchData.movies}\n        MovieButton={NominateButton}\n      />\n      {\n        searchData.error && searchData.error !== 'Incorrect IMDb ID.'\n          ? <p>{searchData.error} Please try another search!</p>\n          : null\n      }\n    </SearchResultsCard>\n  );\n};\n\nexport default SearchResults;","// global constants\nexport const MAX_NOMINATIONS = 5;","export default __webpack_public_path__ + \"static/media/magnifying-glass.4ee2370c.svg\";","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport MagnifyingGlassIcon from '../assets/magnifying-glass.svg';\nimport { Card } from '../styles/Common';\n\nconst SearchCard = styled(Card)`\n  margin-bottom: 2em;\n`;\n\nconst StyledH4 = styled.h4`\n  margin: 0 0 5px 0;\n`;\n\nconst SearchInputContainer = styled.div`\n  display: flex;\n  align-items: center;\n  border: 1.5px solid #bbbbbb;\n  border-radius: 3px;\n  &:focus-within {\n    box-shadow: 0 0 2px;\n    border-color: #00cc99;\n  }\n`;\n\nconst SearchImage = styled.img`\n  margin: 0.75em;\n  width: 17.5px;\n  height: 17.5px;\n  opacity: 0.5;\n`;\n\nconst SearchInput = styled.input`\n  flex: 1;\n  height: 2em;\n  font-size: 1em;\n  border: none;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst SearchBar = React.memo(({ setDebouncedSearchText }) => {\n  const [searchText, setSearchText] = useState('');\n\n  // debounce search text changes to avoid repetitive api calls\n  useEffect(() => {\n    const debounce = setTimeout(() => {\n      setDebouncedSearchText(searchText);\n    }, 500);\n\n    return () => {\n      // unsubscribe\n      clearTimeout(debounce);\n    };\n  }, [searchText]);\n\n  return (\n    <SearchCard>\n      <StyledH4>Movie Title</StyledH4>\n      <SearchInputContainer>\n        <SearchImage\n          src={MagnifyingGlassIcon}\n          alt=\"Magnifying Glass\"\n        />\n        <SearchInput\n          type=\"text\"\n          value={searchText}\n          onChange={(e) => setSearchText(e.target.value)}\n        />\n      </SearchInputContainer>\n    </SearchCard>\n  );\n});\n\nSearchBar.displayName = 'SearchBar';\n\nexport default SearchBar;","import React from 'react';\nimport styled from 'styled-components';\nimport { Card, ListItemButton } from '../styles/Common';\nimport MovieList from './MovieList';\n\nconst NominationsCard = styled(Card)`\n  margin-left: 1em;\n`;\n\nconst StyledH3 = styled.h3`\n  margin: 0 0 5px 0;\n`;\n\nconst Nominations = React.memo(({ nominations, setNominations }) => {\n  const removeNominationByID = (nominationID) => {\n    const newNominationIDs = { ...nominations };\n    delete newNominationIDs[nominationID];\n    setNominations(newNominationIDs);\n  };\n\n  // declare inside b/c we need closure on nomination fns\n  const RemoveButton = ({ movie }) => {\n    return (\n      <ListItemButton\n        onClick={() => removeNominationByID(movie.imdbID)}\n      >\n        Remove\n      </ListItemButton>\n    );\n  };\n\n  const nominatedMovies = Object.values(nominations);\n\n  return (\n    <NominationsCard>\n      <StyledH3>Nominations</StyledH3>\n      <MovieList\n        movies={nominatedMovies}\n        MovieButton={RemoveButton}\n      />\n    </NominationsCard>\n  );\n});\n\nNominations.displayName = 'Nominations';\n\nexport default Nominations;","import React from 'react';\nimport styled from 'styled-components';\n\nconst BannerContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  height: 3.5em;\n  background-color: #343a40;\n  position: fixed;\n  top: 0;\n  & > div {\n    flex: 1;\n  }\n`;\n\nconst BrandContainer = styled.div`\n  margin: 1em; \n  font-size: 1.5em;\n`;\n\nconst NotificationContainer = styled.div`\n  color: #00cc99;\n  text-align: center;\n`;\n\nconst AuthorContainer = styled.div`\n  margin: 0.8em;\n  color: white;\n  text-align: right;\n  font-size: 0.9em;\n`;\n\nconst StyledLink = styled.a`\n  color: white;\n  text-decoration: none;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst Banner = React.memo(({ text }) => {\n  // eslint-disable-next-line no-undef\n  const homeURL = process.env.NODE_ENV === 'development' ? '/' : '/the-shoppies-2021/';\n\n  return (\n    <BannerContainer>\n      <BrandContainer>\n        <StyledLink href={homeURL}>The Shoppies 🏆</StyledLink>\n      </BrandContainer>\n      <NotificationContainer>\n        <h3>{text}</h3>\n      </NotificationContainer>\n      <AuthorContainer>\n        <StyledLink href=\"https://en.wikipedia.org/wiki/Daniel_(Elton_John_song)\">\n          Daniel Ryu\n        </StyledLink> 2020\n      </AuthorContainer>\n    </BannerContainer>\n  );\n});\n\nBanner.displayName = 'Banner';\n\nexport default Banner;","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport GlobalStyle from './styles/GlobalStyle';\nimport SearchResults from './components/SearchResults';\nimport SearchBar from './components/SearchBar';\nimport Nominations from './components/Nominations';\nimport Banner from './components/Banner';\nimport { MAX_NOMINATIONS } from './utils/constants';\n\nconst Content = styled.div`\n  padding: 5em 7.5em 0 7.5em;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: flex-start;\n  & > div {\n    flex: 1;\n  }\n`;\n\nfunction App() {\n  // using dictionary for nominations so movie lists can determine nominated titles in O(1)\n  // key = imdbID, val = movie JSON\n  const [nominations, setNominations] = useState({});\n  const [bannerText, setBannerText] = useState('');\n  const [debouncedSearchText, setDebouncedSearchText] = useState('');\n\n  // set banner text when max num of nominations are chosen\n  useEffect(() => {\n    const maxMoviesNominated = Object.keys(nominations).length === MAX_NOMINATIONS;\n    setBannerText(maxMoviesNominated ? 'Max number of nominations selected!' : '');\n  }, [nominations]);\n\n  return (\n    <>\n      <GlobalStyle />\n      <Banner text={bannerText}/>\n      <Content>\n        <SearchBar\n          setDebouncedSearchText={setDebouncedSearchText}\n        />\n        <Row>\n          <SearchResults\n            debouncedSearchText={debouncedSearchText}\n            nominations={nominations}\n            setNominations={setNominations}\n          />\n          <Nominations\n            nominations={nominations}\n            setNominations={setNominations}\n          />\n        </Row>\n      </Content>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}